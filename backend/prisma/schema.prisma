generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String         @id @default(uuid())
  email       String         @unique
  passwordHash String        @map("password_hash")
  firstName   String         @map("first_name")
  lastName    String         @map("last_name")
  phone       String?
  address     String?
  city        String?
  state       String?
  zipCode     String?        @map("zip_code")
  role        UserRole       @default(user)
  createdAt   DateTime       @default(now()) @map("created_at")
  updatedAt   DateTime       @updatedAt @map("updated_at")
  registrations Registration[]

  @@map("users")
}

model Instructor {
  id        String    @id @default(uuid())
  name      String
  bio       String?   @db.Text
  imageUrl  String?   @map("image_url")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  courses   Course[]

  @@map("instructors")
}

model Course {
  id              String         @id @default(uuid())
  title           String
  description     String         @db.Text
  longDescription String?        @map("long_description") @db.Text
  minAge          Int            @map("min_age")
  maxAge          Int            @map("max_age")
  skillLevel      SkillLevel     @map("skill_level")
  topics          Json
  duration        String
  startDate       DateTime       @map("start_date") @db.Date
  endDate         DateTime       @map("end_date") @db.Date
  days            Json
  timeSlot        String         @map("time_slot")
  price           Decimal        @db.Decimal(10, 2)
  discountedPrice Decimal?       @map("discounted_price") @db.Decimal(10, 2)
  capacity        Int
  instructorId    String?        @map("instructor_id")
  imageUrl        String?        @map("image_url")
  featured        Boolean        @default(false)
  createdAt       DateTime       @default(now()) @map("created_at")
  updatedAt       DateTime       @updatedAt @map("updated_at")
  instructor      Instructor?    @relation(fields: [instructorId], references: [id])
  registrations   Registration[]

  @@map("courses")
}

model DiscountCode {
  id                 String         @id @default(uuid())
  code               String         @unique
  description        String?
  discountPercentage Decimal        @map("discount_percentage") @db.Decimal(5, 2)
  startDate          DateTime?      @map("start_date") @db.Date
  endDate            DateTime?      @map("end_date") @db.Date
  isActive           Boolean        @default(true) @map("is_active")
  maxUses            Int?           @map("max_uses")
  currentUses        Int            @default(0) @map("current_uses")
  createdAt          DateTime       @default(now()) @map("created_at")
  updatedAt          DateTime       @updatedAt @map("updated_at")
  registrations      Registration[]

  @@map("discount_codes")
}

model Registration {
  id                       String       @id @default(uuid())
  userId                   String       @map("user_id")
  courseId                 String       @map("course_id")
  childFirstName           String       @map("child_first_name")
  childLastName            String       @map("child_last_name")
  childDateOfBirth         DateTime     @map("child_date_of_birth") @db.Date
  childGradeLevel          String       @map("child_grade_level")
  childAllergies           String?      @map("child_allergies") @db.Text
  childSpecialNeeds        String?      @map("child_special_needs") @db.Text
  emergencyContactName     String       @map("emergency_contact_name")
  emergencyContactRelation String       @map("emergency_contact_relationship")
  emergencyContactPhone    String       @map("emergency_contact_phone")
  agreedToTerms            Boolean      @default(false) @map("agreed_to_terms")
  photoRelease             Boolean      @default(false) @map("photo_release")
  confirmationNumber       String       @unique @map("confirmation_number")
  paymentStatus            PaymentStatus @map("payment_status")
  amountPaid               Decimal      @map("amount_paid") @db.Decimal(10, 2)
  discountCodeId           String?      @map("discount_code_id")
  createdAt                DateTime     @default(now()) @map("created_at")
  updatedAt                DateTime     @updatedAt @map("updated_at")
  user                     User         @relation(fields: [userId], references: [id])
  course                   Course       @relation(fields: [courseId], references: [id])
  discountCode             DiscountCode? @relation(fields: [discountCodeId], references: [id])

  @@map("registrations")
}

model ContactMessage {
  id        String        @id @default(uuid())
  name      String
  email     String
  phone     String?
  subject   String
  message   String        @db.Text
  status    MessageStatus @default(unread)
  createdAt DateTime      @default(now()) @map("created_at")
  updatedAt DateTime      @updatedAt @map("updated_at")

  @@map("contact_messages")
}

enum UserRole {
  user
  admin
}

enum SkillLevel {
  Beginner
  Intermediate
  Advanced
}

enum PaymentStatus {
  pending
  completed
  failed
  refunded
}

enum MessageStatus {
  unread
  read
  replied
}